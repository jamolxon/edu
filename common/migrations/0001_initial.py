# Generated by Django 5.0.4 on 2024-07-25 00:19

import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_resized.forms
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('date_created', models.DateField(default=django.utils.timezone.now, verbose_name='date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='date updated')),
            ],
            options={
                'verbose_name': 'group',
                'verbose_name_plural': 'groups',
                'db_table': 'group',
            },
        ),
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(max_length=256, verbose_name='full name')),
                ('username', models.CharField(help_text="Majburiy! 5 yoki undan ko'p bo'lgan belgi. Faqat harflar, raqamlar va @/./+/-/_.", max_length=256, null=True, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator(), django.core.validators.MinLengthValidator(5)], verbose_name='username')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='bio')),
                ('image', django_resized.forms.ResizedImageField(crop=['middle', 'center'], force_format='WEBP', keep_meta=True, null=True, quality=90, scale=None, size=[500, 500], upload_to='user/%Y/%m', verbose_name='image')),
                ('role', models.CharField(choices=[('student', 'Student'), ('parent', 'Parent'), ('teacher', 'Teacher'), ('staff', 'Moderator'), ('superuser', 'Superuser')], max_length=12, verbose_name='user role')),
                ('balance', models.IntegerField(default=1, verbose_name='balance')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='name')),
                ('description', models.TextField(verbose_name='description')),
                ('date', models.DateField(verbose_name='date')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='common.group', verbose_name='group')),
            ],
            options={
                'verbose_name': 'lesson',
                'verbose_name_plural': 'lessons',
                'db_table': 'lesson',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=256, verbose_name='first name')),
                ('last_name', models.CharField(max_length=256, verbose_name='last name')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=100, null=True, verbose_name='gender')),
                ('image', django_resized.forms.ResizedImageField(crop=['middle', 'center'], force_format='WEBP', keep_meta=True, null=True, quality=100, scale=None, size=[500, 500], upload_to='student/%Y/%m', verbose_name='image')),
                ('birth_date', models.DateField(verbose_name='birth date')),
                ('phone_number', models.CharField(blank=True, max_length=250, null=True, verbose_name='phone number')),
                ('parent_number', models.CharField(blank=True, max_length=250, null=True, verbose_name='parent number')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('date_created', models.DateField(default=django.utils.timezone.now, verbose_name='date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='students', to='common.group', verbose_name='group')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='students', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'student',
                'verbose_name_plural': 'students',
                'db_table': 'student',
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_date', models.DateField(verbose_name='attendence_date')),
                ('type', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent')], max_length=250, verbose_name='attendence type')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendences', to='common.lesson', verbose_name='lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendences', to='common.student', verbose_name='student')),
            ],
            options={
                'verbose_name': 'attendance',
                'verbose_name_plural': 'attendences',
                'db_table': 'attendance',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=256, verbose_name='full name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('image', django_resized.forms.ResizedImageField(crop=['middle', 'center'], force_format='WEBP', keep_meta=True, null=True, quality=100, scale=None, size=[500, 500], upload_to='teacher/%Y/%m', verbose_name='image')),
                ('is_active', models.BooleanField(default=True, verbose_name='teacher is active')),
                ('date_created', models.DateField(default=django.utils.timezone.now, verbose_name='date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teachers', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'teacher',
                'verbose_name_plural': 'teachers',
                'db_table': 'teacher',
            },
        ),
        migrations.AddField(
            model_name='group',
            name='teacher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='common.teacher', verbose_name='teacher'),
        ),
    ]
